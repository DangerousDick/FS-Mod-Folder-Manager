# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\ModsManagerGUI.ui'
#
# Created by: PyQt5 UI code generator 5.12.3
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(590, 636)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.fmeLists = QtWidgets.QFrame(self.centralwidget)
        self.fmeLists.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.fmeLists.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fmeLists.setObjectName("fmeLists")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.fmeLists)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.grpModFolders = QtWidgets.QGroupBox(self.fmeLists)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grpModFolders.sizePolicy().hasHeightForWidth())
        self.grpModFolders.setSizePolicy(sizePolicy)
        self.grpModFolders.setObjectName("grpModFolders")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.grpModFolders)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lstModFolders = QtWidgets.QListWidget(self.grpModFolders)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        self.lstModFolders.setFont(font)
        self.lstModFolders.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.lstModFolders.setAcceptDrops(False)
        self.lstModFolders.setDragEnabled(False)
        self.lstModFolders.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.lstModFolders.setObjectName("lstModFolders")
        self.verticalLayout_2.addWidget(self.lstModFolders)
        self.lblModFolderCount = QtWidgets.QLabel(self.grpModFolders)
        self.lblModFolderCount.setObjectName("lblModFolderCount")
        self.verticalLayout_2.addWidget(self.lblModFolderCount)
        self.horizontalLayout.addWidget(self.grpModFolders)
        self.grpModsList = QtWidgets.QGroupBox(self.fmeLists)
        self.grpModsList.setObjectName("grpModsList")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.grpModsList)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.lstModsList = QtWidgets.QListWidget(self.grpModsList)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        self.lstModsList.setFont(font)
        self.lstModsList.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.lstModsList.setAcceptDrops(False)
        self.lstModsList.setDragEnabled(False)
        self.lstModsList.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.lstModsList.setObjectName("lstModsList")
        self.verticalLayout_3.addWidget(self.lstModsList)
        self.lblModsListCount = QtWidgets.QLabel(self.grpModsList)
        self.lblModsListCount.setObjectName("lblModsListCount")
        self.verticalLayout_3.addWidget(self.lblModsListCount)
        self.horizontalLayout.addWidget(self.grpModsList)
        self.verticalLayout.addWidget(self.fmeLists)
        self.lblOverrideStatus = QtWidgets.QLabel(self.centralwidget)
        self.lblOverrideStatus.setTextFormat(QtCore.Qt.AutoText)
        self.lblOverrideStatus.setAlignment(QtCore.Qt.AlignCenter)
        self.lblOverrideStatus.setObjectName("lblOverrideStatus")
        self.verticalLayout.addWidget(self.lblOverrideStatus)
        self.fmePaths = QtWidgets.QFrame(self.centralwidget)
        self.fmePaths.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.fmePaths.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fmePaths.setObjectName("fmePaths")
        self.gridLayout = QtWidgets.QGridLayout(self.fmePaths)
        self.gridLayout.setObjectName("gridLayout")
        self.lblModFolders = QtWidgets.QLabel(self.fmePaths)
        self.lblModFolders.setObjectName("lblModFolders")
        self.gridLayout.addWidget(self.lblModFolders, 0, 0, 1, 1)
        self.btnBrowseModPath = QtWidgets.QPushButton(self.fmePaths)
        self.btnBrowseModPath.setObjectName("btnBrowseModPath")
        self.gridLayout.addWidget(self.btnBrowseModPath, 0, 2, 1, 1)
        self.txtGamePath = QtWidgets.QLineEdit(self.fmePaths)
        self.txtGamePath.setReadOnly(True)
        self.txtGamePath.setObjectName("txtGamePath")
        self.gridLayout.addWidget(self.txtGamePath, 1, 1, 1, 1)
        self.lblGameDataPath = QtWidgets.QLabel(self.fmePaths)
        self.lblGameDataPath.setObjectName("lblGameDataPath")
        self.gridLayout.addWidget(self.lblGameDataPath, 1, 0, 1, 1)
        self.txtModFolders = QtWidgets.QLineEdit(self.fmePaths)
        self.txtModFolders.setReadOnly(True)
        self.txtModFolders.setObjectName("txtModFolders")
        self.gridLayout.addWidget(self.txtModFolders, 0, 1, 1, 1)
        self.btnBrowseGamePath = QtWidgets.QPushButton(self.fmePaths)
        self.btnBrowseGamePath.setObjectName("btnBrowseGamePath")
        self.gridLayout.addWidget(self.btnBrowseGamePath, 1, 2, 1, 1)
        self.lblGameExe = QtWidgets.QLabel(self.fmePaths)
        self.lblGameExe.setObjectName("lblGameExe")
        self.gridLayout.addWidget(self.lblGameExe, 2, 0, 1, 1)
        self.txtGameExePath = QtWidgets.QLineEdit(self.fmePaths)
        self.txtGameExePath.setReadOnly(True)
        self.txtGameExePath.setObjectName("txtGameExePath")
        self.gridLayout.addWidget(self.txtGameExePath, 2, 1, 1, 1)
        self.btnBrowseGameExe = QtWidgets.QPushButton(self.fmePaths)
        self.btnBrowseGameExe.setObjectName("btnBrowseGameExe")
        self.gridLayout.addWidget(self.btnBrowseGameExe, 2, 2, 1, 1)
        self.verticalLayout.addWidget(self.fmePaths)
        self.fmeLauncher = QtWidgets.QFrame(self.centralwidget)
        self.fmeLauncher.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.fmeLauncher.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.fmeLauncher.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fmeLauncher.setObjectName("fmeLauncher")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.fmeLauncher)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.btnLaunchFS22 = QtWidgets.QPushButton(self.fmeLauncher)
        self.btnLaunchFS22.setObjectName("btnLaunchFS22")
        self.horizontalLayout_4.addWidget(self.btnLaunchFS22)
        self.btnSetModPath = QtWidgets.QPushButton(self.fmeLauncher)
        self.btnSetModPath.setObjectName("btnSetModPath")
        self.horizontalLayout_4.addWidget(self.btnSetModPath)
        self.verticalLayout.addWidget(self.fmeLauncher)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 590, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuMods = QtWidgets.QMenu(self.menubar)
        self.menuMods.setObjectName("menuMods")
        self.mnuModsFolder = QtWidgets.QMenu(self.menuMods)
        self.mnuModsFolder.setObjectName("mnuModsFolder")
        self.menuModFiles = QtWidgets.QMenu(self.menuMods)
        self.menuModFiles.setObjectName("menuModFiles")
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        self.menOptMods = QtWidgets.QMenu(self.menuOptions)
        self.menOptMods.setObjectName("menOptMods")
        self.mnuOptLaunch = QtWidgets.QMenu(self.menuOptions)
        self.mnuOptLaunch.setObjectName("mnuOptLaunch")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.mnuFileOpen = QtWidgets.QAction(MainWindow)
        self.mnuFileOpen.setShortcut("")
        self.mnuFileOpen.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.mnuFileOpen.setObjectName("mnuFileOpen")
        self.mnuFileSave = QtWidgets.QAction(MainWindow)
        self.mnuFileSave.setObjectName("mnuFileSave")
        self.mnFileExit = QtWidgets.QAction(MainWindow)
        self.mnFileExit.setObjectName("mnFileExit")
        self.mnuHelpAbout = QtWidgets.QAction(MainWindow)
        self.mnuHelpAbout.setObjectName("mnuHelpAbout")
        self.mnuFileSaveAs = QtWidgets.QAction(MainWindow)
        self.mnuFileSaveAs.setObjectName("mnuFileSaveAs")
        self.mnuFileNew = QtWidgets.QAction(MainWindow)
        self.mnuFileNew.setObjectName("mnuFileNew")
        self.mnuListReverseChecklist = QtWidgets.QAction(MainWindow)
        self.mnuListReverseChecklist.setObjectName("mnuListReverseChecklist")
        self.mnuHelpHelp = QtWidgets.QAction(MainWindow)
        self.mnuHelpHelp.setObjectName("mnuHelpHelp")
        self.mnuListRenumberChecklist = QtWidgets.QAction(MainWindow)
        self.mnuListRenumberChecklist.setObjectName("mnuListRenumberChecklist")
        self.mnuListReverseHeadings = QtWidgets.QAction(MainWindow)
        self.mnuListReverseHeadings.setObjectName("mnuListReverseHeadings")
        self.mnuFileAddFolder = QtWidgets.QAction(MainWindow)
        self.mnuFileAddFolder.setObjectName("mnuFileAddFolder")
        self.mnuFIleDeleteFolder = QtWidgets.QAction(MainWindow)
        self.mnuFIleDeleteFolder.setObjectName("mnuFIleDeleteFolder")
        self.mnuModsAddFolder = QtWidgets.QAction(MainWindow)
        self.mnuModsAddFolder.setObjectName("mnuModsAddFolder")
        self.mnuModsRemoveFolder = QtWidgets.QAction(MainWindow)
        self.mnuModsRemoveFolder.setObjectName("mnuModsRemoveFolder")
        self.mnuModsAddItem = QtWidgets.QAction(MainWindow)
        self.mnuModsAddItem.setObjectName("mnuModsAddItem")
        self.mnuModsRemoveItem = QtWidgets.QAction(MainWindow)
        self.mnuModsRemoveItem.setObjectName("mnuModsRemoveItem")
        self.mnuOptClickToLaunch = QtWidgets.QAction(MainWindow)
        self.mnuOptClickToLaunch.setCheckable(True)
        self.mnuOptClickToLaunch.setChecked(False)
        self.mnuOptClickToLaunch.setObjectName("mnuOptClickToLaunch")
        self.mnuOptShowOptions = QtWidgets.QAction(MainWindow)
        self.mnuOptShowOptions.setObjectName("mnuOptShowOptions")
        self.mnuModsCopyMods = QtWidgets.QAction(MainWindow)
        self.mnuModsCopyMods.setObjectName("mnuModsCopyMods")
        self.mnuOptOverrideActive = QtWidgets.QAction(MainWindow)
        self.mnuOptOverrideActive.setCheckable(True)
        self.mnuOptOverrideActive.setChecked(False)
        self.mnuOptOverrideActive.setObjectName("mnuOptOverrideActive")
        self.mnuOptAskBeforeUpdate = QtWidgets.QAction(MainWindow)
        self.mnuOptAskBeforeUpdate.setCheckable(True)
        self.mnuOptAskBeforeUpdate.setObjectName("mnuOptAskBeforeUpdate")
        self.mnuOpenGameFolder = QtWidgets.QAction(MainWindow)
        self.mnuOpenGameFolder.setObjectName("mnuOpenGameFolder")
        self.mnuModsOpenModDirectory = QtWidgets.QAction(MainWindow)
        self.mnuModsOpenModDirectory.setObjectName("mnuModsOpenModDirectory")
        self.mnuModsCopyToAll = QtWidgets.QAction(MainWindow)
        self.mnuModsCopyToAll.setObjectName("mnuModsCopyToAll")
        self.mnuOptInGameConsole = QtWidgets.QAction(MainWindow)
        self.mnuOptInGameConsole.setCheckable(True)
        self.mnuOptInGameConsole.setObjectName("mnuOptInGameConsole")
        self.mnuOptLaunchWithCheats = QtWidgets.QAction(MainWindow)
        self.mnuOptLaunchWithCheats.setCheckable(True)
        self.mnuOptLaunchWithCheats.setObjectName("mnuOptLaunchWithCheats")
        self.mnuOptLaunchWithRestart = QtWidgets.QAction(MainWindow)
        self.mnuOptLaunchWithRestart.setCheckable(True)
        self.mnuOptLaunchWithRestart.setObjectName("mnuOptLaunchWithRestart")
        self.menuFile.addAction(self.mnuOpenGameFolder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.mnFileExit)
        self.menuHelp.addAction(self.mnuHelpHelp)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.mnuHelpAbout)
        self.mnuModsFolder.addAction(self.mnuModsAddFolder)
        self.mnuModsFolder.addAction(self.mnuModsRemoveFolder)
        self.mnuModsFolder.addAction(self.mnuModsOpenModDirectory)
        self.menuModFiles.addAction(self.mnuModsAddItem)
        self.menuModFiles.addAction(self.mnuModsRemoveItem)
        self.menuModFiles.addAction(self.mnuModsCopyMods)
        self.menuModFiles.addAction(self.mnuModsCopyToAll)
        self.menuMods.addAction(self.mnuModsFolder.menuAction())
        self.menuMods.addAction(self.menuModFiles.menuAction())
        self.menOptMods.addAction(self.mnuOptClickToLaunch)
        self.menOptMods.addAction(self.mnuOptOverrideActive)
        self.menOptMods.addAction(self.mnuOptAskBeforeUpdate)
        self.mnuOptLaunch.addAction(self.mnuOptInGameConsole)
        self.mnuOptLaunch.addAction(self.mnuOptLaunchWithCheats)
        self.mnuOptLaunch.addAction(self.mnuOptLaunchWithRestart)
        self.menuOptions.addAction(self.menOptMods.menuAction())
        self.menuOptions.addAction(self.mnuOptLaunch.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuMods.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.mnFileExit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FS Mods Folder Manager"))
        self.grpModFolders.setTitle(_translate("MainWindow", "Mod Folders"))
        self.lblModFolderCount.setText(_translate("MainWindow", "TextLabel"))
        self.grpModsList.setTitle(_translate("MainWindow", "Mods List"))
        self.lblModsListCount.setText(_translate("MainWindow", "TextLabel"))
        self.lblOverrideStatus.setText(_translate("MainWindow", "Override Status"))
        self.lblModFolders.setText(_translate("MainWindow", "Mod Folders Path:"))
        self.btnBrowseModPath.setText(_translate("MainWindow", "Browse"))
        self.txtGamePath.setText(_translate("MainWindow", "path to game installtion folder"))
        self.lblGameDataPath.setText(_translate("MainWindow", "Game Data path:"))
        self.txtModFolders.setText(_translate("MainWindow", "path to mod folders"))
        self.btnBrowseGamePath.setText(_translate("MainWindow", "Browse"))
        self.lblGameExe.setText(_translate("MainWindow", "Game EXE File:"))
        self.txtGameExePath.setText(_translate("MainWindow", "C:\\Program Files (x86)\\Farming Simulator 2022\\FarmingSimulator2022.exe"))
        self.btnBrowseGameExe.setText(_translate("MainWindow", "Browse"))
        self.btnLaunchFS22.setText(_translate("MainWindow", "Launch FS22"))
        self.btnSetModPath.setText(_translate("MainWindow", "Set Mod Path in Game Settings"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuMods.setTitle(_translate("MainWindow", "Mods"))
        self.mnuModsFolder.setTitle(_translate("MainWindow", "Mod Folders"))
        self.menuModFiles.setTitle(_translate("MainWindow", "Mod Files"))
        self.menuOptions.setTitle(_translate("MainWindow", "Options"))
        self.menOptMods.setTitle(_translate("MainWindow", "Mod Options"))
        self.mnuOptLaunch.setTitle(_translate("MainWindow", "Launch Options"))
        self.mnuFileOpen.setText(_translate("MainWindow", "&Open"))
        self.mnuFileOpen.setToolTip(_translate("MainWindow", "Open a check list file"))
        self.mnuFileSave.setText(_translate("MainWindow", "&Save"))
        self.mnuFileSave.setToolTip(_translate("MainWindow", "Save current check list file"))
        self.mnFileExit.setText(_translate("MainWindow", "E&xit"))
        self.mnFileExit.setToolTip(_translate("MainWindow", "Exit check list editor"))
        self.mnuHelpAbout.setText(_translate("MainWindow", "&About"))
        self.mnuHelpAbout.setToolTip(_translate("MainWindow", "About the check list editor"))
        self.mnuFileSaveAs.setText(_translate("MainWindow", "Save &As..."))
        self.mnuFileSaveAs.setToolTip(_translate("MainWindow", "Save current file as..."))
        self.mnuFileNew.setText(_translate("MainWindow", "&New"))
        self.mnuFileNew.setToolTip(_translate("MainWindow", "Create a new check list file"))
        self.mnuListReverseChecklist.setText(_translate("MainWindow", "&Reverse Check List"))
        self.mnuListReverseChecklist.setIconText(_translate("MainWindow", "&Reverse Check List"))
        self.mnuListReverseChecklist.setToolTip(_translate("MainWindow", "Reverse the currently selected check list"))
        self.mnuHelpHelp.setText(_translate("MainWindow", "&Help"))
        self.mnuListRenumberChecklist.setText(_translate("MainWindow", "Renu&mber Check List"))
        self.mnuListRenumberChecklist.setToolTip(_translate("MainWindow", "Renumber the selected check list"))
        self.mnuListReverseHeadings.setText(_translate("MainWindow", "Reverse &Headings list"))
        self.mnuListReverseHeadings.setToolTip(_translate("MainWindow", "Reverse the list of headings"))
        self.mnuFileAddFolder.setText(_translate("MainWindow", "Add Mod Folder"))
        self.mnuFIleDeleteFolder.setText(_translate("MainWindow", "Delete Mod Folder"))
        self.mnuModsAddFolder.setText(_translate("MainWindow", "&Add Folder to List"))
        self.mnuModsRemoveFolder.setText(_translate("MainWindow", "&Remove Selected Folder"))
        self.mnuModsAddItem.setText(_translate("MainWindow", "Add Mod to List"))
        self.mnuModsRemoveItem.setText(_translate("MainWindow", "Remove Selected Mod"))
        self.mnuOptClickToLaunch.setText(_translate("MainWindow", "Double Click Folder to Launch"))
        self.mnuOptShowOptions.setText(_translate("MainWindow", "Open Options File"))
        self.mnuOptShowOptions.setToolTip(_translate("MainWindow", "Open options file in notepad"))
        self.mnuModsCopyMods.setText(_translate("MainWindow", "Copy Mods to Selected Folder"))
        self.mnuOptOverrideActive.setText(_translate("MainWindow", "Mod Folder Override Active"))
        self.mnuOptAskBeforeUpdate.setText(_translate("MainWindow", "Ask Before Updating XML"))
        self.mnuOpenGameFolder.setText(_translate("MainWindow", "Open Game Folder"))
        self.mnuModsOpenModDirectory.setText(_translate("MainWindow", "Open Mods Directory"))
        self.mnuModsCopyToAll.setText(_translate("MainWindow", "Copy Mod to All Folders"))
        self.mnuOptInGameConsole.setText(_translate("MainWindow", "Launch With In-Game Console"))
        self.mnuOptLaunchWithCheats.setText(_translate("MainWindow", "Launch with Cheats"))
        self.mnuOptLaunchWithRestart.setText(_translate("MainWindow", "Launch with Restart"))
